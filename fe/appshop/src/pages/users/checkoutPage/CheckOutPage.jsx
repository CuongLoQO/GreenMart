// import { formatter } from "utils/formatter";
// import BreadCrum from "../theme/breadCrum/BreadCrum";
// import "./checkoutpage.scss"
// const CheckOutPage = () => {
//   return (
//     <>
//       <BreadCrum name="Thanh to√°n" />
//       <div className="container">
//         <div className="row">
//           <div className="col-lg-6 col-md-12 col-sm-12 col-xs-12">
//             <div className="checkout_input">
//               <label>
//                 H·ªç v√† t√™n: <span className="required">*</span>
//                 <input type="text" placeholder="Nh·∫≠p h·ªç v√† t√™n" />
//               </label>
//             </div>
//             <div className="checkout_input">
//               <label>
//                 ƒê·ªãa ch·ªâ: <span className="required">*</span>
//                 <input type="text" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ" />
//               </label>
//             </div>
//             <div className="checkout_input_group">
//               <div className="checkout_input">
//                 <label>
//                   S·ªë ƒëi·ªán tho·∫°i: <span className="required">*</span>
//                   <input type="text" placeholder="S·ªë ƒëi·ªán tho·∫°i" />
//                 </label>
//               </div>
//               <div className="checkout_input">
//                 <label>
//                   Email: <span className="required">*</span>
//                   <input type="email" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ Email" />
//                 </label>
//               </div>
//             </div>
//             <div className="checkout_input">
//               <label>
//                 Ghi ch√∫: <span className="required">*</span>
//                 <textarea rows={20} placeholder="Th√™m ghi ch√∫"></textarea>
//               </label>
//             </div>
//           </div>
//           <div className="col-lg-6 col-md-12 col-sm-12 col-xs-12">
//             <div className="checkout_oder">
//               <h3>ƒê∆°n h√†ng</h3>
//               <ul>
//                 <li>
//                   <span>Th·ªã b√≤ m·ªπ</span>
//                   <b>{formatter(200000)}</b>
//                 </li>
//                 <li>
//                   <span>C√° h·ªìi</span>
//                   <b>{formatter(200000)}</b>
//                 </li>
//                 <li>
//                   <span>D√¢u t√¢y</span>
//                   <b>{formatter(200000)}</b>
//                 </li>
//                 <li>
//                   <span>Cam</span>
//                   <b>{formatter(200000)}</b>
//                 </li>
//                 <li>
//                   <h4>M√£ gi·∫£m gi√°</h4>
//                   <b>Voucher1992</b>
//                 </li>
//                 <li className="checkout_oder-rate">
//                   <h3>T·ªïng thanh to√°n</h3>
//                   <b>{formatter(745000)}</b>
//                 </li>
//               </ul>
//               <button type="submit" className="btn-submit">ƒê·∫∑t h√†ng</button>
//             </div>
//           </div>
//         </div>
//       </div>
//     </>
//   );
// }
// export default CheckOutPage;
import { useState } from "react";
import { useSelector } from "react-redux";
import { formatter } from "utils/formatter";
import BreadCrum from "../theme/breadCrum/BreadCrum";
import "./checkoutpage.scss";

const CheckOutPage = () => {
  const cartItems = useSelector((state) => state.cart.items); // üî• L·∫•y d·ªØ li·ªáu gi·ªè h√†ng t·ª´ Redux

  const [formData, setFormData] = useState({
    name: "",
    address: "",
    phone: "",
    email: "",
    note: "",
  });

  // T√≠nh t·ªïng ti·ªÅn
  const totalPrice = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  // X·ª≠ l√Ω thay ƒë·ªïi input
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // X·ª≠ l√Ω submit ƒë∆°n h√†ng
  const handleSubmit = (e) => {
    e.preventDefault();
    if (!formData.name || !formData.address || !formData.phone || !formData.email) {
      alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }
    // üöÄ X·ª≠ l√Ω ƒë·∫∑t h√†ng t·∫°i ƒë√¢y (c√≥ th·ªÉ g·ª≠i API)
    console.log("ƒê·∫∑t h√†ng th√†nh c√¥ng:", { ...formData, cartItems, totalPrice });
    alert("ƒê·∫∑t h√†ng th√†nh c√¥ng!");
  };

  return (
    <>
      <BreadCrum name="Thanh to√°n" />
      <div className="container">
        <form onSubmit={handleSubmit}>
          <div className="row">
            {/* Form Th√¥ng Tin Ng∆∞·ªùi Mua */}
            <div className="col-lg-6 col-md-12">
              <div className="checkout_input">
                <label>
                  H·ªç v√† t√™n: <span className="required">*</span>
                  <input
                    type="text"
                    name="name"
                    placeholder="Nh·∫≠p h·ªç v√† t√™n"
                    value={formData.name}
                    onChange={handleInputChange}
                  />
                </label>
              </div>

              <div className="checkout_input">
                <label>
                  ƒê·ªãa ch·ªâ: <span className="required">*</span>
                  <input
                    type="text"
                    name="address"
                    placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ"
                    value={formData.address}
                    onChange={handleInputChange}
                  />
                </label>
              </div>

              <div className="checkout_input_group">
                <div className="checkout_input">
                  <label>
                    S·ªë ƒëi·ªán tho·∫°i: <span className="required">*</span>
                    <input
                      type="text"
                      name="phone"
                      placeholder="S·ªë ƒëi·ªán tho·∫°i"
                      value={formData.phone}
                      onChange={handleInputChange}
                    />
                  </label>
                </div>

                <div className="checkout_input">
                  <label>
                    Email: <span className="required">*</span>
                    <input
                      type="email"
                      name="email"
                      placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ Email"
                      value={formData.email}
                      onChange={handleInputChange}
                    />
                  </label>
                </div>
              </div>

              <div className="checkout_input">
                <label>
                  Ghi ch√∫:
                  <textarea
                    name="note"
                    rows={4}
                    placeholder="Th√™m ghi ch√∫"
                    value={formData.note}
                    onChange={handleInputChange}
                  />
                </label>
              </div>
            </div>

            {/* Th√¥ng Tin ƒê∆°n H√†ng */}
            <div className="col-lg-6 col-md-12">
              <div className="checkout_oder">
                <h3>ƒê∆°n h√†ng</h3>
                <ul>
                  {cartItems.map((item) => (
                    <li key={item.id}>
                      <span>{item.name} x {item.quantity}</span>
                      <b>{formatter(item.price * item.quantity)}</b>
                    </li>
                  ))}
                  <li className="checkout_oder-rate">
                    <h3>T·ªïng thanh to√°n</h3>
                    <b>{formatter(totalPrice)}</b>
                  </li>
                </ul>
                <button type="submit" className="btn-submit">
                  ƒê·∫∑t h√†ng
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </>
  );
};

export default CheckOutPage;
